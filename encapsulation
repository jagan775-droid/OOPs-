#include <iostream>
#include <string>
using namespace std;
    class Teacher{
        private:
        double salary;
        
        public:
        // Teacher (){ //non-parameterized constructor
        //     cout<< "Hi, I am constructor \n";
        //     dept="Computer Science";
        // }
        Teacher (string name, string dept, string subject, double salary){ //parameterized constructor
            this->name=name;
            this->dept=dept;
            this->subject=subject;
            this->salary=salary;
        }
        //copy constructor
        Teacher(Teacher &orgObj){ //pass by reference
            cout<<"I am a custom copy constructor ...\n"<<endl;
            this->name = orgObj.name;
            this->dept = orgObj.dept;
            this->subject = orgObj.subject;
            this->salary = orgObj.salary;
        }
        //properties or attributes
        string name;
        string dept;
        string subject;
        //methods or memberfunctions
        void changeDept(string newDept){
            dept = newDept;
        }
        //setter
        void setSalary(double s){
            salary = s;
        }
        //getter
        double getSalary(){
            return salary;
        }
        void getInfo(){
        cout << "name: "<<name<<endl;
        cout << "subject: "<<subject<<endl;
        }
    };
    
    /*class BankAcc{
        private:
        double balance;
        string password; //data hiding or Encapsuilation
        public:
        string accountId;
        string username;
         //setter
        void setBalance(double b){
            balance = b;
        }
        //getter
        double getBalance(){
            return balance;
        }
    };*/
int main() {
    // Teacher t1;  //Automatically constructor call
    // t1.name="shradha";
    // t1.subject="CPP";
    // t1.dept="Computer Science";
    // t1.setSalary(50000);
    Teacher t1("Shradha", "Computer Science", "CPP", 50000);
    t1.getInfo();
    cout << t1.name <<endl;
    cout << t1.getSalary() <<endl;
    Teacher t2(t1); //custom copy constructor
    t2.getInfo();
    
    /*BankAcc b1;
    b1.setBalance(2006);
    cout << b1.getBalance() <<endl;*/
    return 0;
}
